apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: s3test-cloudpipe-long-master-workflow-template
  generateName: brave-abcd-pipeline- # string prepended to the workflow ID
  namespace: argo-workflows
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::026415314835:role/argo-workflows-s3access
spec:
  archiveLogs: true
  serviceAccountName: argo-workflows-s3access
  entrypoint: fullABCDfmriPrepPipeline
  # artifactGC:
  #     strategy: OnWorkflowDeletion

  # MUST include a global security context to ensure artifacts are passed with the same (accessible) 
  # permissions or else some tasks may not be able to access passed artifacts (this took too long to figure out)
  # see: https://github.com/argoproj/argo-workflows/issues/9651 (can also set 'mode: 755' e.g., to define permissions)
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true

  # Arguments passed at the command line ('-p arg=')
  arguments:
    parameters:
      - name: ndaGUID
      - name: miNDARpkgID
      - name: subjID
        # Prepending the NDA GUID with 'sub-' per BIDS format
        value: sub-{{workflow.parameters.ndaGUID}}

  templates:
  - name: fullABCDfmriPrepPipeline
    dag:
      # Providing each task in the DAG, its dependencies, and any output artifacts to be passed
      tasks:
        # - name: ndadownloader
        #   templateRef:
        #     name: ndadownloader-long-workflow-template
        #     template: ndadownloader-long-template

        # - name: artifact-check
        #   templateRef:
        #     name: ndadownloader-long-workflow-template
        #     template: artifact-check


        - name: fastsurfer-template
          templateRef: 
            name: s3test-fastsurfer-long-template-creation-workflow-template
            template: fastsurfer-template
          # when: "{{=len({{tasks.artifact-check.outputs.result}}) > 1}}"
          # dependencies:
          #   - artifact-check
          # arguments:
          #   parameters:
          #     - name: timepointlist
          #       value: '{{tasks.artifact-check.outputs.result}}'





        # - name: fastsurfer-segmentation
        #   templateRef:
        #     name: abcd-fastsurfer-segmentation-workflow-template-submittable
        #     template: fastsurfer-segmentation-template
        #   dependencies:
        #     - ndadownloader
        #   arguments:
        #     artifacts:
        #       - name: ndadownloader-output
        #         from: '{{tasks.ndadownloader.outputs.artifacts.T1w}}'

        # - name: fastsurfer-parcellation
        #   templateRef:
        #     name: abcd-fastsurfer-parcellation-workflow-template-submittable
        #     template: fastsurfer-parcellation-template
        #   dependencies:
        #     - fastsurfer-segmentation
        #   # Artifacts passed between templates must be specified here, at the workflow level
        #   arguments:
        #     artifacts:
        #       - name: segmentation-output
        #         from: '{{tasks.fastsurfer-segmentation.outputs.artifacts.segmentation-output}}'

        # - name: fmriprep
        #   templateRef: 
        #     name: abcd-fmriprep-workflow-template-submittable
        #     template: fmriprep-template
        #   dependencies:
        #     - fastsurfer-parcellation
        #   arguments:
        #     artifacts:
        #       - name: fastsurfer-output
        #         from: '{{tasks.fastsurfer-parcellation.outputs.artifacts.fastsurfer-output}}'

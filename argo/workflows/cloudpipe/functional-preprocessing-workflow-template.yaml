apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: functional-preprocessing-workflow-template
  namespace: argo-workflows

spec:
  retryStrategy:
    retryPolicy: "Always"
    limit: "2"

  templates:
  - name: functional-preprocessing-steps-template
    inputs:
      parameters:
        - name: session
    steps:
    - - name: functional-task-inventory
        template: functional-task-inventory-template
        arguments:
          parameters:
            - name: session
              value: '{{inputs.parameters.session}}'

    - - name: fmriprep
        template: fmriprep-template
        arguments:
          parameters:
            - name: session
              value: '{{inputs.parameters.session}}'
        when: '{{steps.functional-task-inventory.outputs.result}} == True'

  - name: functional-task-inventory-template
    inputs:
      parameters:
        - name: session
    securityContext:
      runAsUser: 0
    nodeSelector:
      karpenter.sh/nodepool: al2023-intel-light-nodepool

    script:
      image: public.ecr.aws/docker/library/python:3-slim-bullseye
      imagePullPolicy: IfNotPresent
      resources:
        requests:
          ephemeral-storage: 50M
      command: ["sh", "-c"]

      env:
        - name: SUBJECT_ID
          value: "{{workflow.parameters.subjID}}"
        - name: SESSION
          value: "{{inputs.parameters.session}}"
        - name: BUCKET_NAME
          value: "abcd-working"

      source: |

        #!/bin/sh
        # Install required Python packages quietly
        python -m pip install -q --disable-pip-version-check --root-user-action=ignore boto3 botocore

        python - <<EOF
        import os
        import re
        import sys
        import logging
        from pathlib import PurePosixPath

        import boto3

        def find_tasks_in_s3(bucket: str, subject_id: str, session: str) -> set:
            s3_client = boto3.client('s3')
            prefix = f'inputs/{subject_id}/{session}/func/'
            found_tasks = set()

            # logging.info(f"Listing objects in bucket '{bucket}' with prefix '{prefix}'")
            paginator = s3_client.get_paginator('list_objects_v2')
            pages = paginator.paginate(Bucket=bucket, Prefix=prefix)

            for page in pages:
                if 'Contents' not in page:
                    continue

                for obj in page.get('Contents', []):
                    key = obj.get('Key', '')
                    if key.endswith(('.nii', '.nii.gz')):
                        filename = PurePosixPath(key).name
                        match = re.search(r'task-([a-zA-Z0-9]+)', filename)
                        if match:
                            task_name = match.group(1)
                            found_tasks.add(task_name)
            return found_tasks

        def main():
            subj_id = "{{workflow.parameters.subjID}}"
            session = "{{inputs.parameters.session}}"
            bucket_name = os.environ.get('BUCKET_NAME')

            if not all([subj_id, session, bucket_name]):
                # logging.error("Missing required environment variables.")
                sys.exit(1)

            tasks = find_tasks_in_s3(bucket_name, subj_id, session)
            # logging.info(f"Found tasks: {tasks}")

            target_tasks = {"rest", "nback"}
            if tasks.intersection(target_tasks):
                print("True")
            else:
                print("False")

        if __name__ == "__main__":
            main()
        EOF

  - name: fmriprep-template

    inputs:
      parameters:
        - name: session

      artifacts:
      #--- BIDS Dataset Description ---# (fmriprep will fail to recognize the input if this is missing)
      - name: dataset-description
        path: /data/dataset_description.json
        s3:
          key: 'config/dataset_description.json'

      #--- Freesurfer License ---# (fmriprep uses Freesurfer tools, ergo a license is required)
      - name: fslicense
        path: /data/.license
        s3:
          key: 'config/fslicense'

      #--- FastSurfer Output ---#
      # see: https://fmriprep.org/en/stable/usage.html#using-a-previous-run-of-freesurfer
      # Here we pull in a segmented, parcellated, and within-subjects template aligned anatomical for the specified session
      # However, fmriprep is expecting a directory name matching the subject ID (NOT the session), so we'll just unpack to that path.
      # - name: fastsurfer-templated-session
      #   path: /data/sourcedata/freesurfer/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}
      #   s3:
      #     key: 'derivatives/fastsurfer/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}_templated.tar.gz'

      # fmriprep requires fsaverage to generate cifti output
      - name: fsaverage
        path: /data/sourcedata/freesurfer/fsaverage
        s3:
          key: 'config/fsaverage'

      #--- Anatomicals ---# (fmriprep uses these for alignment, even if pre-computed Freesurfer derivatives are passed)
      # T1w
      ## NIFTI
      - name: T1w
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.nii'
      ## JSON
      - name: T1w-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.json'

      # T2w (optional)
      ## NIFTI
      - name: T2w
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T2w.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T2w.nii'
        optional: true
      ## JSON
      - name: T2w-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T2w.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.json'
        optional: true

      #--- Functionals ---#
      # Resting State (we'll assume there may be as many as six rsfmri runs)
      ## Run-01
      ### NIFTI
      - name: rest-run-1
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_bold.nii'
        optional: true
      ### JSON
      - name: rest-run-1-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_bold.json'
        optional: true
      ### MOTION
      - name: rest-run-1-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_motion.tsv'
        optional: true

      ## Run-02
      - name: rest-run-2
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_bold.nii'
        optional: true
      - name: rest-run-2-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_bold.json'
        optional: true
      - name: rest-run-2-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_motion.tsv'
        optional: true

      ## Run-03
      - name: rest-run-3
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_bold.nii'
        optional: true
      - name: rest-run-3-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_bold.json'
        optional: true
      - name: rest-run-3-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_motion.tsv'
        optional: true

      ## Run-04
      ### NIFTI
      - name: rest-run-4
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_bold.nii'
        optional: true
      ### JSON
      - name: rest-run-4-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_bold.json'
        optional: true
      - name: rest-run-4-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_motion.tsv'
        optional: true

      ## Run-05
      ### NIFTI
      - name: rest-run-5
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_bold.nii'
        optional: true
      ### JSON
      - name: rest-run-5-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_bold.json'
        optional: true
      - name: rest-run-5-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_motion.tsv'
        optional: true

      ## Run-06
      ### NIFTI
      - name: rest-run-6
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_bold.nii'
        optional: true
      ### JSON
      - name: rest-run-6-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_bold.json'
        optional: true
      - name: rest-run-6-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_motion.tsv'
        optional: true

      # N-Back (assuming a possible maximum of four runs)

      ## Run-01
      ### NIFTI
      - name: nback-run-1
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_bold.nii'
        optional: true

      ### JSON
      - name: nback-run-1-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_bold.json'
        optional: true

      ### MOTION
      - name: nback-run-1-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_motion.tsv'
        optional: true

      ## Run-02
      ### NIFTI
      - name: nback-run-2
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_bold.nii'
        optional: true
      ### JSON
      - name: nback-run-2-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_bold.json'
        optional: true
      ### MOTION
      - name: nback-run-2-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_motion.tsv'
        optional: true

      ## Run-03
      ### NIFTI
      - name: nback-run-3
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_bold.nii'
        optional: true
      ### JSON
      - name: nback-run-3-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_bold.json'
        optional: true
      ### MOTION
      - name: nback-run-3-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_motion.tsv'
        optional: true

      ## Run-04
      ### NIFTI
      - name: nback-run-4
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_bold.nii'
        optional: true
      ### JSON
      - name: nback-run-4-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_bold.json'
        optional: true
      ### MOTION
      - name: nback-run-4-motion
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_motion.tsv
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_motion.tsv'
        optional: true

    outputs:
      artifacts:
      - name: fmriprep-output
        path: /fmriprep_output/{{workflow.parameters.subjID}}/
        s3:
          endpoint: s3-accelerate.amazonaws.com
          bucket: 'abcd-working'
          key: 'derivatives/fmriprep/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/fmriprep-output.tar.gz'
          region: us-east-2

    nodeSelector:
      karpenter.sh/nodepool: al2023-intel-heavy-nodepool

    # If FastSurfer has to start over due to pod deletion, it will leave behind the isRunning files
    # fmriprep will crash if these are present
    initContainers:
      - name: clear-is-running
        image: public.ecr.aws/docker/library/alpine:latest
        imagePullPolicy: IfNotPresent
        command: ["find", "/data/sourcedata/freesurfer", "-name", "*IsRunning*", "-delete"]
        mirrorVolumeMounts: true

    container:
      securityContext:
        runAsUser: 0
      # Pull from our public repository containing slightly modified fmriprep images
      image: public.ecr.aws/l9e7l1h1/cloudpipe/fmriprep:latest
      imagePullPolicy: Always

      # Silencing the horde of Python warnings fmriprep spits out - seriously...
      env:
        - name: PYTHONWARNINGS
          value: "ignore"
        - name: MPLCONFIGDIR
          value: "/work/.cache/matplotlib"
        - name: SUBJECTS_DIR
          value: "/data/sourcedata/freesurfer"

      volumeMounts:
        # fmriprep base directory
        # PersistentVolumeClaim reference
      - name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
        # Path inside the container where the volume will be mounted
        mountPath: /data
        # Volume path to which we're linking (no starting '/')
        # Name the directory after the session so that the
        # fmriprep directory on the container is always empty at the start
        subPath: '{{inputs.parameters.session}}'

        # fmriprep work directory
      - name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
        # Path inside the container where the volume will be mounted
        mountPath: /work
        # As above, link to a unique path on the volume
        # so that the work directory is always empty at the start
        subPath: '{{inputs.parameters.session}}/work'

        # fmriprep output directory
      - name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
        # Path inside the container where the volume will be mounted
        mountPath: /fmriprep_output
        # As above, link to a unique path on the volume
        # so that the output directory is always empty at the start
        subPath: '{{inputs.parameters.session}}/fmriprep_output'

        # Fastsurfer subject directory
      - name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
        # fmriprep is looking for a (BIDS) subject directory (hard coded)
        # We want to pass it a session directory (the proc'd anatomicals
        # corresponding to the current session). So we link a subject directory
        # to the previously created session directory.
        mountPath: /fsdir/{{workflow.parameters.subjID}}
        # Sub-path inside the referenced volume (instead of its root) to be mounted
        subPath: '{{inputs.parameters.session}}/sourcedata/freesurfer'

      resources:
        requests:
          memory: 16G
          cpu: '8'
        limits:
          cpu: '8'

      args:
        - -vv
        - --nprocs
        - '8'
        - --mem
        - '16000'
        - --skip-bids-validation
        - --notrack
        - --fs-license-file
        - /data/.license
        - --fs-subjects-dir
        - /data/sourcedata/freesurfer
        - --work-dir
        - /work
        - --clean-workdir
        - --cifti-output
        - 91k
        - --medial-surface-nan
        - --project-goodvoxels
        # Including this flag keeps fmriprep from attempting to
        # resume recon-all from precomputed derivatives
        - --fs-no-resume
        # ABCD MinProc data is already fieldmap corrected
        - --ignore
        - fieldmaps
        - --derivatives
        - freesurfer=/data/sourcedata
        # Include these arguments to ensure replicable outputs
        - --skull-strip-fixed-seed
        - --random-seed
        - '52618'
        - /data
        - /fmriprep_output
        - participant


apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: fastsurfer-template-segmentation-workflow-template
  namespace: argo-workflows
spec:

  retryStrategy:
    retryPolicy: "Always"
    limit: "2"

  securityContext:
    runAsNonRoot: true

  templates:
  - name: fastsurfer-template-segmentation-template

    nodeSelector:
      karpenter.sh/nodepool: al2023-gpu-nodepool

    initContainers:
      - name: clear-is-running
        image: alpine:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            ephemeral-storage: 300M
        command: ["find", "/opt/freesurfer/subjects", "-name", "*IsRunning*", "-delete"]
        mirrorVolumeMounts: true

    container:
      # deepmi/fastsurfer does NOT explicitly add a nonroot user to the image - which seems to be a requirement for containerd
      # we'll just create a variant that does add the nonroot user (and their user directory)
      image: public.ecr.aws/l9e7l1h1/cloudpipe/fastsurfer:latest
      imagePullPolicy: IfNotPresent
      volumeMounts:
        # PersistentVolumeClaim reference
      - name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
        # Path inside the container where volume will be mounted
        mountPath: /opt/freesurfer/subjects
        # Sub-path inside the referenced volume (instead of its root) to be mounted
        subPath: opt/freesurfer/subjects
      resources:
        requests:
          memory: 8G
          cpu: '4'
        limits:
          nvidia.com/gpu: '1'

      args:
        - '--sid'
        - '{{workflow.parameters.subjID}}_template'
        - '--sd'
        - '/opt/freesurfer/subjects'
        - '--base'
        - '--edits'
        - '--seg_only'
        - '--threads'
        - '8'


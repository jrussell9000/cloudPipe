apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  #name: deepprep-workflow-template
  generateName: deepprep-workflow-template
  namespace: argo-workflows


spec:
  ##### DELETE FOR PRODUCTION #########
  serviceAccountName: argo-workflows-runner
  # Create the following persistent volume claim for this workflow
  volumeClaimTemplates:
    # Naming the volume claim after the subject ID (for tracking)
    - metadata:
        # "Name" should be used to reference this PVC further down the workflow
        name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
        # Specify a string that will be appended to the string created by generateName in the workflow metadata
        # By introducing the random character sequence from the metadata, we create a unique PVC for each workflow
        # run, even if it's for the same subject ID. Neat!
        generateName: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
      spec:
        accessModes: [ "ReadWriteMany" ]
        storageClassName: nfs
        resources:
          requests:
            storage: 30Gi

  arguments:
    parameters:
      # Workflow parameters passed from command-line (-p) are indicated by lack of an accompanying value
      - name: ndaGUID
      # - name: miNDARpkgID
      # Creating new workflow parameters by modifying existing ones (using expr language)
      - name: subjID
        # Prepending the NDA GUID with 'sub-' per BIDS format
        value: sub-{{workflow.parameters.ndaGUID}}
  entrypoint: testdag
  ######################################
  retryStrategy:
    retryPolicy: "Always"
    limit: "2"

  securityContext:
    runAsNonRoot: false

  templates:
  ##### DELETE FOR PRODUCTION #########
  - name: testdag
    dag:
      tasks:
        - name: testdagttask
          template: deepprep-template
          arguments:
            parameters:
              - name: session
                value: '{{item}}'
          withItems:
          - "ses-baselineYear1Arm1"
          - "ses-2YearFollowUpYArm1"
  ######################################

  - name: deepprep-template

    inputs:
      parameters:
        - name: session

      artifacts:
      #--- BIDS Dataset Description ---# (deepprep will fail to recognize the input if this is missing)
      - name: dataset-description
        path: /data/dataset_description.json
        s3:
          key: 'config/dataset_description.json'

      #--- Freesurfer License ---# (deepprep uses Freesurfer tools, ergo a license is required)
      - name: fslicense
        path: /data/.license
        s3:
          key: 'config/fslicense'

      # #--- FastSurfer Output ---#
      # # see: https://deepprep.org/en/stable/usage.html#using-a-previous-run-of-freesurfer
      # # Here we pull in a segmented, parcellated, and within-subjects template aligned anatomical for the specified session
      # # However, deepprep is expecting a directory name matching the subject ID (NOT the session), so we'll just unpack to that path.
      - name: fastsurfer-templated-session
        path: /fsdir/{{workflow.parameters.subjID}}
        s3:
          key: 'derivatives/fastsurfer/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}_templated.tar.gz'

      # deepprep requires fsaverage to generate cifti output
      - name: fsaverage
        path: /fsdir/fsaverage
        s3:
          key: 'config/fsaverage'

      #--- Anatomicals ---# (deepprep uses these for alignment, even if pre-computed Freesurfer derivatives are passed)
      # T1w
      ## NIFTI
      - name: T1w
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.nii'
      ## JSON
      - name: T1w-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.json'

      # T2w (optional)
      ## NIFTI
      - name: T2w
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T2w.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T2w.nii'
        optional: true
      ## JSON
      - name: T2w-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T2w.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/anat/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_run-01_T1w.json'
        optional: true

      #--- Functionals ---#
      # Resting State (we'll assume there may be as many as six rsfmri runs)
      ## Run-01
      ### NIFTI
      - name: rest-run-1
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_bold.nii'
        optional: true
      ### JSON
      - name: rest-run-1-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-01_bold.json'
        optional: true

      ## Run-02
      ### NIFTI
      - name: rest-run-2
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_bold.nii'
        optional: true
      - name: rest-run-2-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-02_bold.json'
        optional: true

      ## Run-03
      ### NIFTI
      - name: rest-run-3
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_bold.nii'
        optional: true
      ### JSON
      - name: rest-run-3-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-03_bold.json'
        optional: true

      ## Run-04
      ### NIFTI
      - name: rest-run-4
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_bold.nii'
        optional: true
      ### JSON
      - name: rest-run-4-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-04_bold.json'
        optional: true

      ## Run-05
      ### NIFTI
      - name: rest-run-5
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_bold.nii'
        optional: true
      ### JSON
      - name: rest-run-5-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-05_bold.json'
        optional: true

      ## Run-06
      ### NIFTI
      - name: rest-run-6
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_bold.nii'
        optional: true
      ### JSON
      - name: rest-run-6-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-rest_run-06_bold.json'
        optional: true

      # N-Back (assuming a possible maximum of four runs)

      ## Run-01
      ### NIFTI
      - name: nback-run-1
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_bold.nii'
        optional: true

      ### JSON
      - name: nback-run-1-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-01_bold.json'
        optional: true

      ## Run-02
      ### NIFTI
      - name: nback-run-2
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_bold.nii'
        optional: true
      ### JSON
      - name: nback-run-2-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-02_bold.json'
        optional: true

      ## Run-03
      ### NIFTI
      - name: nback-run-3
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_bold.nii'
        optional: true
      ### JSON
      - name: nback-run-3-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-03_bold.json'
        optional: true

      ## Run-04
      ### NIFTI
      - name: nback-run-4
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_bold.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_bold.nii'
        optional: true
      ### JSON
      - name: nback-run-4-json
        path: /data/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_bold.json
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/func/{{workflow.parameters.subjID}}_{{inputs.parameters.session}}_task-nback_run-04_bold.json'
        optional: true

    outputs:
      artifacts:
      - name: deepprep-output
        path: /deepprep_output/{{workflow.parameters.subjID}}/
        s3:
          endpoint: s3-accelerate.amazonaws.com
          bucket: 'abcd-working'
          key: 'derivatives/deepprep/{{workflow.parameters.subjID}}/{{inputs.parameters.session}}/deepprep-output.tar.gz'
          region: us-east-2

    nodeSelector:
      karpenter.sh/nodepool: al2023-gpu-nodepool

    # If FastSurfer has to start over due to pod deletion, it will leave behind the isRunning files
    # deepprep will crash if these are present
    initContainers:
      - name: clear-is-running
        image: public.ecr.aws/docker/library/alpine:latest
        imagePullPolicy: IfNotPresent
        command: ["find", "/fsdir", "-name", "*IsRunning*", "-delete"]
        mirrorVolumeMounts: true

    container:
      # deepprep crashes hard when its not run as root - too lazy to resolve this
      securityContext:
        runAsUser: 0

      # Pull from our public repository containing slightly modified deepprep images
      image: pbfslab/deepprep:25.1.0
      imagePullPolicy: IfNotPresent

      # Silencing the horde of Python warnings deepprep spits out - seriously...
      env:
        - name: PYTHONWARNINGS
          value: "ignore"

      volumeMounts:
        # deepprep base directory
        # PersistentVolumeClaim reference
      - name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
        # Path inside the container where the volume will be mounted
        mountPath: /data
        # Volume path to which we're linking (no starting '/')
        # Name the directory after the session so that the
        # fmriprep directory on the container is always empty at the start
        subPath: '{{inputs.parameters.session}}'

        # fmriprep work directory
      - name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
        # Path inside the container where the volume will be mounted
        mountPath: /work
        # As above, link to a unique path on the volume
        # so that the work directory is always empty at the start
        subPath: '{{inputs.parameters.session}}/work'

        # fmriprep output directory
      - name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
        # Path inside the container where the volume will be mounted
        mountPath: /fmriprep_output
        # As above, link to a unique path on the volume
        # so that the output directory is always empty at the start
        subPath: '{{inputs.parameters.session}}/fmriprep_output'

      #   # Fastsurfer subject directory
      # - name: "sub-{{=lower(workflow.parameters.ndaGUID)}}"
      #   # fmriprep is looking for a (BIDS) subject directory (hard coded)
      #   # We want to pass it a session directory (the proc'd anatomicals
      #   # corresponding to the current session). So we link a subject directory
      #   # to the previously created session directory.
      #   mountPath: /fsdir/{{workflow.parameters.subjID}}
      #   # Sub-path inside the referenced volume (instead of its root) to be mounted
      #   subPath: "opt/freesurfer/subjects/{{inputs.parameters.session}}"

      resources:
        requests:
          memory: 16G
          cpu: '4'
          # ephemeral-storage: 50G

      args:
        - /data
        - /deepprep_output
        - participant
        - --bold-task-type
        - 'rest'
        - 'nback'
        - --fs_license_file
        - '/data/.license'
        - --subjects_dir
        - '/fsdir'
        - --skip_bids_validation
        - --bold_only
        - --bold_sdc
        - 'False'
        - --bold_confounds
        - 'True'
        - --bold_skip_frame
        - '10'
        - --bold_cifti
        - --bold_volume_space
        - 'MNI152NLin2009cAsym'
        - --cpus
        - '8'
        - --memory
        - '16000'



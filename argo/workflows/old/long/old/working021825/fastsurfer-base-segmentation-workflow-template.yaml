apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: fastsurfer-base-segmentation-workflow-template
  namespace: argo-workflows
spec:
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    runAsNonRoot: true

  templates:
  - name: fastsurfer-base-segmentation-template

    # Files coming in...
    inputs:
      artifacts:
      - name: base-template
        # Container path where the output will be saved
        path: '/opt/freesurfer/subjects/{{workflow.parameters.subjID}}'

    # Files going out...
    outputs:
      artifacts:
      - name: base-segmentation
        path: '/opt/freesurfer/subjects/{{workflow.parameters.subjID}}/'
        s3:
          # Workflows will automatically compress the output artifact, but we need to manually add the .tar.gz
          key: 'derivatives/fastsurfer/{{workflow.parameters.subjID}}/{{workflow.parameters.subjID}}-base-segmentation.tar.gz'

    nodeSelector:
      karpenter.sh/nodepool: al2023-gpu-nodepool

    container:
      imagePullPolicy: IfNotPresent
      # deepmi/fastsurfer does NOT explicitly add a nonroot user to the image - which seems to be a requirement for containerd
      # we'll just create a variant that does add the nonroot user (and their user directory)
      image: public.ecr.aws/l9e7l1h1/cloudpipe/fastsurfer:latest
      resources:
        requests:
          memory: 16Gi
          cpu: 4000m
        limits:
          nvidia.com/gpu: '1'

      # Formatting below from https://github.com/argoproj/argo-workflows/blob/main/examples/artifact-path-placeholders.yaml
      args:
        - '--sid'
        - '{{workflow.parameters.subjID}}'
        - '--sd'
        - /opt/freesurfer/subjects
        - '--base'
        - '--seg_only'


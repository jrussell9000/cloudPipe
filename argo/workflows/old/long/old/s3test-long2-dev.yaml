apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: s3test-
  namespace: argo-workflows
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::026415314835:role/argo-workflows-s3access
spec:
  archiveLogs: true
  serviceAccountName: argo-workflows-s3access

  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    runAsNonRoot: true

  # Formatting Notes:
  # * Underscores are not allowed in template or task names
  # * Template names must be in lower case, task names should be camel case
  # * DO NOT use hyphens if the object will later be referenced by jsonPath
  #   which treats hyphens as a subtraction sign (this SHOULD be fixable...)
  entrypoint: fastsurfer-template
  templates:
  - name: fastsurfer-template
    dag:
      tasks: 
      - name: pullArtifactsTask
        template: pullartifactstemplate

      - name: checkArtifactsTask
        template: checkartifactstemplate
        dependencies: 
          - pullArtifactsTask

      - name: fastsurfer-template-creation-dagtask
        template: fastsurfer-template-creation-template
        arguments:
          parameters:
            - name: T1
              value: "{{tasks.checkArtifactsTask.outputs.parameters.T1}}"
            - name: T2
              value: "{{tasks.checkArtifactsTask.outputs.parameters.T2}}"
        dependencies:
          - checkArtifactsTask

  # template names must be lower case 
  - name: pullartifactstemplate
    outputs:
      parameters:
        - name: result
          valueFrom: 
            path: /tmp/result.json
    inputs:
      artifacts: 
      - name: T1w_Y0
        # Container path where the output will be saved
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-baselineYear1Arm1_run-01_T1w.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-baselineYear1Arm1/anat/{{workflow.parameters.subjID}}_ses-baselineYear1Arm1_run-01_T1w.nii'

      - name: T1w_Y2
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-2YearFollowUpYArm1_run-01_T1w.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-2YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-2YearFollowUpYArm1_run-01_T1w.nii'

      - name: T1w_Y4
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-4YearFollowUpYArm1_run-01_T1w.nii
        optional: true
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-4YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-4YearFollowUpYArm1_run-01_T1w.nii'

      - name: T1w_Y6
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-6YearFollowUpYArm1_run-01_T1w.nii
        optional: true
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-6YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-6YearFollowUpYArm1_run-01_T1w.nii'

      - name: T1w_Y8
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-8YearFollowUpYArm1_run-01_T1w.nii
        optional: true
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-8YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-8YearFollowUpYArm1_run-01_T1w.nii'

      - name: T1w_Y10
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-10YearFollowUpYArm1_run-01_T1w.nii
        optional: true
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-10YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-10YearFollowUpYArm1_run-01_T1w.nii'
    script:
      image: python:alpine3.21
      command: [python]
      source: |
        from pathlib import Path
        import json

        timelist = [p.name.split('_')[1] for p in Path('/home/nonroot/').glob('*.nii') if p.is_file()]
        paths = [str(p) for p in Path('/home/nonroot/').glob('*.nii') if p.is_file()]
        out = dict(zip(timelist, paths))
        with open("/tmp/result.json", "w") as jsonfile:
          json.dump(out, jsonfile)

  - name: checkartifactstemplate
    steps:
      - - name: checkArtifactsStep
          template: pullartifactstemplate
    outputs:
      parameters:
        - name: T1
          valueFrom:
            expression: "jsonpath(steps.checkArtifactsStep.outputs.parameters.result, '$.ses-baselineYear1Arm1')"
        - name: T2
          valueFrom:
            expression: "jsonpath(steps.checkArtifactsStep.outputs.parameters.result, '$.ses-2YearFollowUpYArm1')"

  - name: fastsurfer-template-creation-template
    inputs:
      parameters:
        - name: T1
      artifacts:
      - name: fslicense
        path: /opt/freesurfer/.license
        s3:
          key: config/fslicense

    script:
      env:
        - name: T1
          value: "{{inputs.parameters.T1}}"
      image: ubuntu:22.04
      command:
        - bash
      source: |
        echo "$T1"

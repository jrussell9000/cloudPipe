apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: s3test-fastsurfer-long-template-creation-workflow-template
  namespace: argo-workflows
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::026415314835:role/argo-workflows-s3access
spec:
  archiveLogs: true
  serviceAccountName: argo-workflows-s3access

  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    runAsNonRoot: true

  entrypoint: fastsurfer-template
  templates:
  - name: fastsurfer-template
    dag:
      tasks: 
      - name: artifact-check-dagtask
        template: artifact-check
      - name: fastsurfer-long-template-creation-dagtask
        template: fastsurfer-long-template-creation
        dependencies:
          - artifact-check-dagtask
        arguments:
          parameters:
          - name: timelist
            value: '{{tasks.artifact-check-dagtask.outputs.result}}'



  - name: artifact-check
    inputs:
      artifacts: 
      - name: T1w_Y0
        # Container path where the output will be saved
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-baselineYear1Arm1_run-01_T1w.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-baselineYear1Arm1/anat/{{workflow.parameters.subjID}}_ses-baselineYear1Arm1_run-01_T1w.nii'

      - name: T1w_Y2
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-2YearFollowUpYArm1_run-01_T1w.nii
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-2YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-2YearFollowUpYArm1_run-01_T1w.nii'

      - name: T1w_Y4
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-4YearFollowUpYArm1_run-01_T1w.nii
        optional: true
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-4YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-4YearFollowUpYArm1_run-01_T1w.nii'

      - name: T1w_Y6
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-6YearFollowUpYArm1_run-01_T1w.nii
        optional: true
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-6YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-6YearFollowUpYArm1_run-01_T1w.nii'

      - name: T1w_Y8
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-8YearFollowUpYArm1_run-01_T1w.nii
        optional: true
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-8YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-8YearFollowUpYArm1_run-01_T1w.nii'

      - name: T1w_Y10
        path: /home/nonroot/{{workflow.parameters.subjID}}_ses-10YearFollowUpYArm1_run-01_T1w.nii
        optional: true
        s3:
          key: 'inputs/{{workflow.parameters.subjID}}/ses-10YearFollowUpYArm1/anat/{{workflow.parameters.subjID}}_ses-10YearFollowUpYArm1_run-01_T1w.nii'
    script:
      image: python:alpine3.21
      env:
        - name: ARGO_DEBUG_PAUSE_AFTER
          value: 'true'
      command: [python]
      source: |
        from pathlib import Path
        T1s = Path('/home/nonroot/*').rglob('*_T1w.nii')
        ses = [T1.name.split('_')[1] for T1 in T1s]
        print(ses)

  # - name: fastsurfer-long-template-creation
  #   inputs:
  #     parameters:
  #       - name: timelist
  #       - name: T1w_Y4_exists
  #         value: '{{=inputs.parameters.timelist =~ "ses-4YearFollowUpYArm1" ? inputs.artifacts.T1_Y4.path : nil}}'

  #     artifacts:
  #     - name: fslicense
  #       path: /opt/freesurfer/.license
  #       s3:
  #         key: config/fslicense

  #   # Files going out...
  #   outputs:
  #     artifacts:
  #     - name: template-output
  #       path: /home/nonroot/work/{{workflow.parameters.subjID}}/
  #       s3:
  #         # Workflows will automatically compress the output artifact, but we need to manually add the .tar.gz
  #         key: 'derivatives/fastsurfer/{{workflow.parameters.subjID}}/'
  #       # Keeping output compression on allows us to retain symbolic links, which aren't allowed on S3
  #       archive:
  #         none: {}
    
  #   nodeSelector:
  #     karpenter.sh/nodepool: al2023-gpu-nodepool

  #   container:
  #     imagePullPolicy: IfNotPresent
  #     # Using a modded FastSurfer image that explicitly adds the nonroot user, as seems to be required by containerd/Argo
  #     # Using an AWS ECR repository (vs. Dockerhub) modestly reduces time to pod initialization
  #     image: public.ecr.aws/l9e7l1h1/cloudpipe/fastsurfer:latest
  #     resources:
  #       requests:
  #         memory: 16Gi
  #         cpu: 4000m
  #       limits:
  #         nvidia.com/gpu: '1'
  #     command:
  #       - '/fastsurfer/recon_surf/long_prepare_template.sh'
  #     args: ['--tid', '{{workflow.parameters.subjID}}', '--t1s', '{{inputs.artifacts.T1w_Y0.path}}', '{{inputs.artifacts.T1w_Y2.path}}', 
  #           '{{inputs.parameters.T1w_Y4_exists}}',
  #           '--tpids', 'ses-baselineYear1Arm1', 'ses-2YearFollowUpYArm1', 
  #           '--sd', '/home/nonroot/work']


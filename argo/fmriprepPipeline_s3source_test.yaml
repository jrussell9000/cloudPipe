apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: brave-abcd-pipeline- # string prepended to the workflow ID
  namespace: argo-workflows
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::026415314835:role/argo_workflows_s3access
spec:
  archiveLogs: true
  serviceAccountName: argo-workflows-runner
  entrypoint: fullABCDfmriPrepPipeline
  # artifactGC:
  #     strategy: OnWorkflowDeletion

  # MUST include a global security context to ensure artifacts are passed with the same (accessible) 
  # permissions or else some tasks may not be able to access passed artifacts (this took too long to figure out)
  # see: https://github.com/argoproj/argo-workflows/issues/9651 (can also set 'mode: 755' e.g., to define permissions)
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true

  # Arguments passed at the command line ('-p arg=')
  arguments:
    parameters:
      - name: ndaGUIDses
      - name: miNDARpkgID
      - name: subjID
        # Prepending the NDA GUID with 'sub-' per BIDS format
        value: sub-{{=split(workflow.parameters.ndaGUIDses, '_')[0]}}
        # Prepending the ABCD timepoint with 'ses-' per BIDS format
      - name: ses
        value: ses-{{=split(workflow.parameters.ndaGUIDses, '_')[1]}}
        # Combining the BIDS formatted subjid and ses into a single string
        # NOTE: Can ONLY use user-supplied arguments in this expression (e.g., ndaGUIDses) 
        # or else the parameter won't pass correctly to the templates below
      - name: subjIDses
        value: sub-{{=split(workflow.parameters.ndaGUIDses, '_')[0]}}_ses-{{=split(workflow.parameters.ndaGUIDses, '_')[1]}}

  templates:
  - name: fullABCDfmriPrepPipeline
    dag:
      # Providing each task in the DAG, its dependencies, and any output artifacts to be passed
      tasks:
        # - name: fastsurfer-segmentation
        #   templateRef:
        #     name: abcd-fastsurfer-segmentation-workflow-template-submittable
        #     template: fastsurfer-segmentation-template

        # - name: fastsurfer-parcellation
        #   templateRef:
        #     name: abcd-fastsurfer-parcellation-workflow-template-submittable
        #     template: fastsurfer-parcellation-template
        #   dependencies:
        #     - fastsurfer-segmentation
        #   # Artifacts passed between templates must be specified here, at the workflow level
        #   arguments:
        #     artifacts:
        #       - name: segmentation-output
        #         from: '{{tasks.fastsurfer-segmentation.outputs.artifacts.segmentation-output}}'

        # - name: fmriprep
        #   templateRef: 
        #     name: abcd-fmriprep-workflow-template-submittable
        #     template: fmriprep-template
        #   dependencies:
        #     - fastsurfer-parcellation
        #   arguments:
        #     artifacts:
        #       - name: fastsurfer-output
        #         from: '{{tasks.fastsurfer-parcellation.outputs.artifacts.fastsurfer-output}}'

        - name: fmriprep
          templateRef: 
            name: abcd-fmriprep-workflow-template-submittable
            template: fmriprep-template
          arguments:
            artifacts:
            - name: fastsurfer-output
              mode: 0777
              recurseMode: true
              s3:
                key: derivatives/fastsurfer/{{workflow.parameters.subjID}}/{{workflow.parameters.ses}}/fastsurfer-output.tar.gz

apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: brave-abcd-pipeline- # string prepended to the workflow
  namespace: argo-workflows
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::026415314835:role/argo_workflows_s3access
spec:
  #  archiveLogs: true
  serviceAccountName: argo-workflows-runner
  entrypoint: fullABCDfmriPrepPipeline
  # artifactGC:
  #     strategy: OnWorkflowDeletion

  # MUST include a global security context to ensure artifacts are passed with the same (accessible) 
  # permissions or else some tasks may not be able to access passed artifacts (this took too long to figure out)
  # see: https://github.com/argoproj/argo-workflows/issues/9651 (can also set 'mode: 755' e.g., to define permissions)
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000

  # Arguments passed at the command line ('-p arg=')
  arguments:
    parameters:
      - name: rawsubjsesid
      - name: miNDARpkgID
      - name: subjid
        # Prepending the NDA GUID with 'sub-' per BIDS format
        value: '{{=join(["sub-", split(workflow.parameters.rawsubjsesid, "_")[0]])}}'
        # Prepending the ABCD timepoint with 'ses-' per BIDS format
      - name: ses
        value: '{{=join(["ses-", split(workflow.parameters.rawsubjsesid, "_")[1]])}}'
        # Combining the BIDS formatted subjid and ses into a single string
      - name: subjsesid
        value: '{{=join([workflow.parameters.subjid, workflow.parameters.ses], "_")}}'

  templates:

    ###############################
    # ---- MAIN PIPELINE DAG ---- #
    ###############################
    - name: fullABCDfmriPrepPipeline
      dag:
        # Providing each task in the DAG, its dependencies, and its inputs
        tasks:
          #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
          # FastSurfer Segmentation Task @
          #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
          # - name: Segmentation
          #   template: segmentation-tmpl
          #   # Inputs to DAG templates use the arguments format
          #   arguments:
          #     # Using output of NDA-Download as input
          #     artifacts:
          #     - name: T1w
          #       s3:
          #         key: inputs/{{workflow.parameters.subjid}}/{{workflow.parameters.ses}}/anat/{{workflow.parameters.subjsesid}}_run-01_T1w.nii
          #       # Using the output of format-rawsubjses (BIDS-formatted ID) as input
          #     - name: T2w
          #       s3:
          #         key: inputs/{{workflow.parameters.subjid}}/{{workflow.parameters.ses}}/anat/{{workflow.parameters.subjsesid}}_run-01_T2w.nii
          #     parameters:
          #       - name: subjsesid
          #         value: '{{ workflow.parameters.subjsesid }}'
          #       - name: subjid
          #         value: '{{ workflow.parameters.subjid }}'
          #       - name: ses
          #         value: '{{ workflow.parameters.ses }}'

          # #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
          # # FastSurfer Parcellation Task @
          # #@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
          # - name: Parcellation
          #   template: parcellation-tmpl
          #   dependencies:
          #     - Segmentation
          #   # Inputs to DAG templates use the arguments format
          #   arguments:
          #     # Using output of Segmentation as input
          #     artifacts:
          #       - name: segmentedOutput
          #         from: '{{tasks.Segmentation.outputs.artifacts.seg_output}}'
          #       # Using the output of format-rawsubjses (BIDS-formatted ID) as input
          #     parameters:
          #       - name: subjsesid
          #         value: '{{ workflow.parameters.subjsesid }}'
          #       - name: subjid
          #         value: '{{ workflow.parameters.subjid }}'
          #       - name: ses
          #         value: '{{ workflow.parameters.ses }}'

          #@@@@@@@@@@@@@@@@
          # fmriprep Task @
          #@@@@@@@@@@@@@@@@
          - name: fmriPrep
            template: fmriprep-tmpl
            # dependencies:
            #   - Parcellation
            arguments:
              parameters:
                - name: subjsesid
                  value: '{{ workflow.parameters.subjsesid }}'
                - name: subjid
                  value: '{{ workflow.parameters.subjid }}'
                - name: ses
                  value: '{{ workflow.parameters.ses }}'

    ################################
    # ---- DAG TASK TEMPLATES ---- #
    ################################

    #%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    # FastSurfer Segmentation Template %
    #%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    - name: segmentation-tmpl

      inputs:
        artifacts:
          - name: T1w
            path: /home/nonroot/{{inputs.parameters.subjsesid}}_run-01_T1w.nii

        parameters:
          - name: subjsesid
          - name: subjid
          - name: ses

      nodeSelector:
        karpenter.sh/nodepool: bottlerocket-gpu-nodepool

      container:
        imagePullPolicy: IfNotPresent
        # deepmi/fastsurfer does NOT explicitly add a nonroot user to the image - 
        # this seems to be a requirement for argo workflows to run as non-root,
        # therefore, we need to use the jrussell9000/fastsurfer:latest variant, which does add the nonroot user (and their user directory)
        image: jrussell9000/fastsurfer:latest
        # ex. Last line of https://github.com/argoproj/argo-workflows/blob/main/examples/artifact-path-placeholders.yaml
        args:
          - '--t1'
          - '{{inputs.artifacts.T1w.path}}'
          - '--sid'
          - '{{inputs.parameters.subjsesid}}'
          - '--sd'
          - /home/nonroot/work
          - '--seg_only'
          - '--parallel'
          - '--3T'
          - '--threads'
          - '4'
          - '--no_cereb'
          - '--no_biasfield'

        resources:
          requests:
            memory: 16Gi
            cpu: 4000m
          limits:
            nvidia.com/gpu: '1'

      outputs:
        artifacts:
          - name: seg_output
            path: /home/nonroot/work/{{inputs.parameters.subjsesid}}
            s3:
              key: 'derivatives/fastsurfer-seg/{{ inputs.parameters.subjid }}/{{ inputs.parameters.ses }}'

    # #%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    # # FastSurfer Parcellation Template %
    # #%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    - name: parcellation-tmpl

      inputs:
        artifacts:
          - name: segmentedOutput
            path: /home/nonroot/{{inputs.parameters.subjsesid}}
          - name: fslicense
            path: /opt/freesurfer/.license
            s3:
              key: config/fslicense
        parameters:
          - name: subjsesid
          - name: subjid
          - name: ses

      nodeSelector:
        karpenter.sh/nodepool: bottlerocket-cpuheavy-nodepool

      container:
        imagePullPolicy: IfNotPresent
        image: jrussell9000/fastsurfer:latest
        # ex. Last line of https://github.com/argoproj/argo-workflows/blob/main/examples/artifact-path-placeholders.yaml
        args:
          - '--sid'
          - '{{inputs.parameters.subjsesid}}'
          - '--sd'
          - /home/nonroot
          - '--surf_only'
          - '--parallel'
          - '--3T'
          - '--threads'
          - '4'
          - '--fs_license'
          - '{{inputs.artifacts.fslicense.path}}'

        resources:
          requests:
            memory: 16Gi
            cpu: 4000m

      outputs:
        artifacts:
          - name: fastsurfer_output
            path: /home/nonroot/{{inputs.parameters.subjsesid}}
            s3:
              key: derivatives/fastsurfer/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}

    # #%%%%%%%%%%%%%%%%%%%%
    # # fmriprep Template %
    # #%%%%%%%%%%%%%%%%%%%%
    - name: fmriprep-tmpl
      inputs:
        artifacts:
          - name: fslicense
            path: /home/fmriprep/.license
            s3:
              key: config/fslicense
          - name: dataset-description
            path: /home/fmriprep/input/dataset_description.json
            s3:
              key: "inputs/dataset_description.json"

          # FastSurfer Output
          # https://fmriprep.org/en/stable/usage.html#using-a-previous-run-of-freesurfer
          - name: fastsurfer-output
            path: /home/fmriprep/output/sourcedata/freesurfer/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}
            mode: 0755
            s3:
              key: derivatives/fastsurfer/{{ inputs.parameters.subjid }}/{{ inputs.parameters.ses }}

          # Anatomicals
          - name: T1w
            path: /home/fmriprep/input/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/anat/{{inputs.parameters.subjsesid}}_run-01_T1w.nii
            s3:
              key: inputs/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/anat/{{inputs.parameters.subjsesid}}_run-01_T1w.nii
          - name: T1w-json
            path: /home/fmriprep/input/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/anat/{{inputs.parameters.subjsesid}}_run-01_T1w.json
            s3:
              key: inputs/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/anat/{{inputs.parameters.subjsesid}}_run-01_T1w.json
          - name: T2w
            path: /home/fmriprep/input/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/anat/{{inputs.parameters.subjsesid}}_run-01_T2w.nii
            s3:
              key: inputs/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/anat/{{inputs.parameters.subjsesid}}_run-01_T2w.nii
          - name: T2w-json
            path: /home/fmriprep/input/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/anat/{{inputs.parameters.subjsesid}}_run-01_T2w.json
            s3:
              key: inputs/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/anat/{{inputs.parameters.subjsesid}}_run-01_T1w.json

          # Resting State
          - name: rest-run-1
            path: /home/fmriprep/input/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/func/{{inputs.parameters.subjsesid}}_task-rest_run-01_bold.nii
            s3:
              key: "inputs/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/func/{{inputs.parameters.subjsesid}}_task-rest_run-01_bold.nii"
          - name: rest-run-1-json
            path: /home/fmriprep/input/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/func/{{inputs.parameters.subjsesid }}_task-rest_run-01_bold.json
            s3:
              key: "inputs/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}/func/{{inputs.parameters.subjsesid}}_task-rest_run-01_bold.json"
        parameters:
          - name: subjsesid
          - name: subjid
          - name: ses

      nodeSelector:
        karpenter.sh/nodepool: al2-cpuheavy-nodepool

      outputs:
        artifacts:
        - name: fmriprep-output
          path: /home/fmriprep/output/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}
          s3:
            key: derivatives/fmriprep/{{inputs.parameters.subjid}}/{{inputs.parameters.ses}}
      
      container:
        imagePullPolicy: IfNotPresent
        image: public.ecr.aws/w5b6h0h5/fmriprep:latest
        resources:
          requests:
            memory: 16Gi
            cpu: 4000m
        args:
          - '--skip-bids-validation'
          - '--fs-license-file'
          - '/home/fmriprep/.license'
          - '--nprocs'
          - '4'
          - '--omp-nthreads'
          - '4'
          - '--mem'
          - '16000'
          - '--ignore'
          - 'fieldmaps'
          - '--cifti-output'
          - '170k'
          - '--skull-strip-fixed-seed'
          - '--random-seed'
          - '52618'
          - '/home/fmriprep/input'
          - '/home/fmriprep/output'
          - participant


extensions:
  health_check:
  aws_sigv4:
    region: ${region}
    service: "aps"

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  #
  # Scrape configuration for the Prometheus Receiver
  # This is the same configuration used when Prometheus is installed using the community Helm chart
  # 
  prometheus:
    config:
      global:
        scrape_interval: 15s
        scrape_timeout: 10s

      scrape_configs:
      - job_name: kubelet-cadvisor
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: keep
          source_labels:
            - __meta_kubernetes_node_name 
          regex: .+
          replacement: $1
        - replacement: $1:10250
          target_label: __address__
        - source_labels:
          - __meta_kubernetes_node_name
          target_label: instance
        - target_label: __metrics_path__
          replacement: /metrics/cadvisor
        - target_label: job
          replacement: kubelet-cadvisor

      - job_name: kubelet-probes
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels:
          - __meta_kubernetes_node_name
          regex: +.
          action: keep
        - target_label: __address__
          replacement: $1:10250
        - source_labels:
          - __meta_kubernetes_node_name
          target_label: instance
        - target_label: __metrics_path__
          replacement: /metrics/probes
        - target_label: job
          replacement: kubelet-probes

      - job_name: kubelet-resource
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels:
          - __meta_kubernetes_node_name
          regex: +.
          action: keep
        - target_label: __address__
          replacement: $1:10250
        - source_labels:
          - __meta_kubernetes_node_name
          target_label: instance
        - target_label: __metrics_path__
          replacement: /metrics/resources
        - target_label: job
          replacement: kubelet-resource

      - job_name: karpenter-controller
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
          - source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_instance
            action: keep
            regex: karpenter
          - source_labels:
            - __meta_kubernetes_pod_container_port_name
            action: keep
            regex: http-metrics
          - source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - target_label: job
            replacement: karpenter-controller

      - job_name: argo-workflows-controller
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
            - __meta_kubernetes_pod_label_app
            action: keep
            regex: workflow-controller
          - source_labels:
            - __address__
            - __meta_kubernetes_pod_annotation_prometheus_io_port
            action: replace
            regex: ([^:]+):(?:\\d+);(\\d+)
            replacement: $1:$2
            target_label: container
          - target_label: job
            replacement: argo-workflow-controller

processors:
  memory_limiter:
    check_interval: 1s
    limit_mib: 1000
    spike_limit_mib: 300
  batch:
    send_batch_size: 8192
    timeout: 1s
  k8sattributes:
    auth_type: serviceAccount
    passthrough: false
    extract:
      metadata:
      - k8s.pod.name
      - k8s.pod.uid
      - k8s.deployment.name
      - k8s.node.name
      - k8s.namespace.name
      - k8s.replicaset.name
      - k8s.daemonset.name
      - k8s.statefulset.name
      - k8s.container.name
  resource:
    attributes:
      - key: aws-region
        value: ${region}
        action: upsert
      - key: aws.ecs.cluster.arn
        value: ${cluster_name}
        action: upsert
      - key: eks.cluster.name
        value: ${cluster_name}
        action: upsert

exporters:
  logging:
    loglevel: debug
  awscloudwatchlogs:
    log_group_name: ${cloudwatch_log_group}
    log_stream_name: otel-collector-{k8s.node.name}-{k8s.pod-uid}
    region: ${region}
  prometheusremotewrite:
    endpoint: ${prometheus_endpoint}api/v1/remote_write
    region: ${region}
    auth:
      authenticator: sigv4auth

service:
  extensions: [sigv4auth]
  pipelines:
    logs:
      receivers: [filelog]
      processors: [memory_limiter,k8sattributes,batch]
      exporters: [prometheusremotewrite]
    metrics:
      receivers: [prometheus]
      processors: [memory_limiter,k8sattributes,resource,batch]
      exporters: [prometheusremotewrite]
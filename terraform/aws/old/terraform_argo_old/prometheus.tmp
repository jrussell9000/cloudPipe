resource "aws_prometheus_workspace" "fastproc" {
  alias = "fastProc"
}

resource "kubernetes_namespace_v1" "prometheus" {
  metadata {
    name = "monitoring"
  }
}

resource "kubernetes_storage_class_v1" "prometheus" {

  metadata {
    name = "prometheus-storage"
  }

  storage_provisioner = "ebs.csi.aws.com"
  volume_binding_mode = "WaitForFirstConsumer"
  parameters = {
    type    = "gp2"
    fs_type = "ext4"
  }
}

resource "kubernetes_persistent_volume_claim_v1" "prometheus" {
  metadata {
    name      = "prometheus-storage-claim"
    namespace = "monitoring"
  }

  spec {
    storage_class_name = "ebs-sc"
    access_modes       = ["ReadWriteMany"]
    resources {
      requests = {
        storage = "5Gi"
      }
    }
  }

}


module "managed_prometheus_irsa_role" {
  source = "terraform-aws-modules/iam/aws//modules/iam-role-for-service-accounts-eks"

  role_name                                       = "prometheus_irsa"
  attach_amazon_managed_service_prometheus_policy = true

  amazon_managed_service_prometheus_workspace_arns = [aws_prometheus_workspace.fastproc.arn]

  oidc_providers = {
    main = {
      provider_arn               = module.eks.oidc_provider_arn
      namespace_service_accounts = ["monitoring:prometheus_irsa"]
    }
  }
}

resource "helm_release" "prometheus" {
  namespace        = "monitoring"
  name             = "prometheus-community"
  repository       = "https://prometheus-community.github.io/helm-charts"
  chart            = "prometheus"
  version          = "25.27.0"
  create_namespace = true
  wait             = true
  cleanup_on_fail  = true

  values = [templatefile("${path.module}/helm-values/prometheus.tftpl", {
    KARPENTER_NAMESPACE = module.karpenter.namespace
  })]
}

resource "helm_release" "grafana" {
  namespace       = "monitoring"
  name            = "grafana"
  repository      = "https://grafana.github.io/helm-charts"
  chart           = "grafana"
  version         = "8.5.1"
  wait            = true
  cleanup_on_fail = true

  values = [templatefile("${path.module}/helm-values/grafana.tftpl", {

  })]
}

# curl -fsSL https://raw.githubusercontent.com/aws/karpenter-provider-aws/v"${KARPENTER_VERSION}"/website/content/en/preview/getting-started/getting-started-with-karpenter/grafana-values.yaml | tee grafana-values.yaml
# helm install --namespace monitoring grafana grafana-charts/grafana --values grafana-values.yaml

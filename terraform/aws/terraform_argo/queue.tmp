
# https://raw.githubusercontent.com/awslabs/data-on-eks/f94cebb6424ddcac0918730296b068098505aaaa/schedulers/terraform/argo-workflow/spark-team.tf
#---------------------------------------------------------------
# IRSA for Argo events to read and send SQS
#---------------------------------------------------------------

# Create Argo Events namesapce
resource "kubernetes_namespace" "argo-events-namespace" {
  metadata {
    annotations = {
      name = "argo-events-namespace"
    }
    name = "argo-events"
  }
}

# Install Argo Events
resource "kubectl_manifest" "argo-events-install" {
  yaml_body = file("${path.module}/yamls/argo-events/install-argo-events.yaml")
}

# Install validating admission controller
resource "kubectl_manifest" "argo-events-validating-admission-controller" {
  yaml_body = file("${path.module}/yamls/argo-events/install-validating-webhook.yaml")
}

# Install eventbus pods
resource "kubectl_manifest" "argo-events-eventbus" {
  yaml_body = file("${path.module}/yamls/argo-events/eventbus.yaml")
}

# Install event source for AWS SQS
resource "kubectl_manifest" "argo-events-create-webhook-eventsource" {
  yaml_body = templatefile("${path.module}/yamls/argo-events/eventsource-sqs.tftpl", {
    queue_name = var.queue_name
    region     = var.region
  })
}

# Create an RBAC service account for the sensor
resource "kubectl_manifest" "argo-events-sensor-rbac" {
  yaml_body = file("${path.module}/yamls/argo-events/sensor-rbac.yaml")
}

# Create an RBAC service account that will trigger workflows
resource "kubectl_manifest" "argo-events-workflow-rbac" {
  yaml_body = file("${path.module}/yamls/argo-events/workflow-rbac.yaml")
}

